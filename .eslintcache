[{"C:\\GitHub\\repositories\\markerFront\\src\\reportWebVitals.ts":"1","C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"2","C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"3","C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\AdminHeader\\AdminHeader.tsx":"4","C:\\GitHub\\repositories\\markerFront\\src\\SharedComponents\\InputString\\InputString.tsx":"5","C:\\GitHub\\repositories\\markerFront\\src\\index.tsx":"6","C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminAuth\\AdminAuth.tsx":"7","C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminProducts\\AdminProducts.tsx":"8","C:\\GitHub\\repositories\\markerFront\\src\\Redux\\reducers\\index.tsx":"9","C:\\GitHub\\repositories\\markerFront\\src\\SharedComponents\\ChangeProductForm\\ChangeProductForm.tsx":"10"},{"size":440,"mtime":1618577943371,"results":"11","hashOfConfig":"12"},{"size":369,"mtime":1619099340687,"results":"13","hashOfConfig":"12"},{"size":379,"mtime":1618577943354,"results":"14","hashOfConfig":"12"},{"size":3999,"mtime":1619102197102,"results":"15","hashOfConfig":"12"},{"size":881,"mtime":1620224482801,"results":"16","hashOfConfig":"12"},{"size":673,"mtime":1618577943370,"results":"17","hashOfConfig":"12"},{"size":606,"mtime":1618577943347,"results":"18","hashOfConfig":"12"},{"size":3429,"mtime":1620143659335,"results":"19","hashOfConfig":"12"},{"size":190,"mtime":1618577943362,"results":"20","hashOfConfig":"12"},{"size":13587,"mtime":1620233189293,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1104srv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\repositories\\markerFront\\src\\reportWebVitals.ts",[],"C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",["43"],"C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\AdminHeader\\AdminHeader.tsx",["44","45"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Config } from '../../../Config/Config'\r\nimport { RootState } from '../../../Redux'\r\nimport { setAppMarketUser } from '../../../Redux/actions/app'\r\nimport { setMobileMenu } from '../../../Redux/actions/modal'\r\nimport { MarketUser } from '../../../Redux/interfaces/AdditionalInterfaces/MarketUser'\r\nimport { AppState, ModalState } from '../../../Redux/interfaces/interfaces'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport './AdminHeader.scss'\r\nimport NavbarMenuItem from '../../../SharedComponents/NavbarMenuItem/NavbarMenuItem'\r\nimport { Command } from '../../../Redux/interfaces/AdditionalInterfaces/Command'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ninterface AdminHeaderProps {\r\n  setMobileMenu: (isActive: boolean) => void\r\n  setAppMarketUser: (marketUser: MarketUser | null) => void\r\n  app: AppState\r\n  modal: ModalState\r\n}\r\n\r\nconst commands: Command[] = [\r\n  {\r\n    name: 'logout',\r\n    method: 'GET',\r\n    path: '/api/admin/logout',\r\n  },\r\n]\r\n\r\nconst AdminHeader = (props: AdminHeaderProps) => {\r\n  const [commandList, setCommands] = useState(() => commands)\r\n\r\n  const logoutHandler = (command: Command): void => {\r\n    const api = axios.create({\r\n      method: command.method,\r\n      baseURL: Config.backConnectData.backendURL,\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: `Bearer ${props.app.marketUser?.apiToken}`,\r\n      },\r\n    })\r\n\r\n    api(command.path)\r\n    localStorage.removeItem('marketUser')\r\n    props.setAppMarketUser(null)\r\n  }\r\n  \r\n  const bodyUnBlock = (): void => {\r\n    document.querySelector('body')?.classList.remove('modal-open')\r\n  }\r\n\r\n  const commandRequestHandler = (commandName: string | null): void => {\r\n    const command = commandList.find((command) => command.name === commandName)\r\n    command && logoutHandler(command)\r\n  }\r\n\r\n  const toggleMobileMenu = (commandName: string | null): void => {\r\n    const isActive = !props.modal.mobileMenu.isActive\r\n    bodyUnBlock()\r\n    props.setMobileMenu(isActive)\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"AdminHeader\">\r\n      {/* <h3 onClick={() => logoutHandler()}>Logout</h3> */}\r\n      <Row className=\"AdminHeader__navbar m-0 d-flex justify-content-between\">\r\n        <div className=\"AdminHeader__navbarLeft d-block d-xl-none\">\r\n          <NavbarMenuItem clickHandler={toggleMobileMenu}>\r\n            <Icon.Grid3x3GapFill width={30} height={30} fill={`#f8f9fa`} />\r\n          </NavbarMenuItem>\r\n        </div>\r\n\r\n        <div className=\"AdminHeader__navbarLeft d-none d-xl-flex\">\r\n          <NavLink to=\"/admin\">\r\n            <NavbarMenuItem title={`Профиль`}>\r\n              <Icon.PersonSquare width={30} height={30} fill={`#f8f9fa`} />\r\n            </NavbarMenuItem>\r\n          </NavLink>\r\n          <NavLink to=\"/admin/products\">\r\n            <NavbarMenuItem title={`Продукты`}>\r\n              <Icon.BasketFill width={30} height={30} fill={`#f8f9fa`} />\r\n            </NavbarMenuItem>\r\n          </NavLink>\r\n          <NavLink to=\"/admin/categories\">\r\n            <NavbarMenuItem title={`Категории`}>\r\n              <Icon.CardList width={30} height={30} fill={`#f8f9fa`} />\r\n            </NavbarMenuItem>\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"AdminHeader__navbarRight\">\r\n          <NavbarMenuItem title={`Выход`} commandName=\"logout\" clickHandler={commandRequestHandler}>\r\n            <Icon.DoorOpenFill width={30} height={30} fill={`#f8f9fa`} />\r\n          </NavbarMenuItem>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAppMarketUser,\r\n  setMobileMenu,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const app = state.app  \r\n  const modal = state.modal\r\n  return {\r\n    app,\r\n    modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHeader)\r\n","C:\\GitHub\\repositories\\markerFront\\src\\SharedComponents\\InputString\\InputString.tsx",[],"C:\\GitHub\\repositories\\markerFront\\src\\index.tsx",[],"C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminAuth\\AdminAuth.tsx",[],"C:\\GitHub\\repositories\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminProducts\\AdminProducts.tsx",["46"],"C:\\GitHub\\repositories\\markerFront\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\repositories\\markerFront\\src\\SharedComponents\\ChangeProductForm\\ChangeProductForm.tsx",["47","48","49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"52","severity":1,"message":"57","line":33,"column":23,"nodeType":"54","messageId":"55","endLine":33,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":65,"column":6,"nodeType":"60","endLine":65,"endColumn":8,"suggestions":"61"},{"ruleId":"52","severity":1,"message":"62","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":20},{"ruleId":"52","severity":1,"message":"63","line":21,"column":24,"nodeType":"54","messageId":"55","endLine":21,"endColumn":35},{"ruleId":"52","severity":1,"message":"64","line":42,"column":10,"nodeType":"54","messageId":"55","endLine":42,"endColumn":23},{"ruleId":"52","severity":1,"message":"65","line":42,"column":25,"nodeType":"54","messageId":"55","endLine":42,"endColumn":41},{"ruleId":"52","severity":1,"message":"66","line":58,"column":9,"nodeType":"54","messageId":"55","endLine":58,"endColumn":36},"@typescript-eslint/no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setCommands' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'LoaderCircle' is defined but never used.","'fuzzySearch' is defined but never used.","'selectOptions' is assigned a value but never used.","'setSelectOptions' is assigned a value but never used.","'productCategoryInputHandler' is assigned a value but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [getProducts]",{"range":"70","text":"71"},[2344,2346],"[getProducts]"]