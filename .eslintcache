[{"C:\\GitHub\\markerFront\\src\\App.tsx":"1","C:\\GitHub\\markerFront\\src\\Redux\\actions\\toast.tsx":"2","C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"3","C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminProducts\\AdminProducts.tsx":"4","C:\\GitHub\\markerFront\\src\\Redux\\actions\\app.tsx":"5","C:\\GitHub\\markerFront\\src\\Redux\\reducers\\app.tsx":"6","C:\\GitHub\\markerFront\\src\\SharedComponents\\ProductReferenceCard\\ProductReferenceCard.tsx":"7","C:\\GitHub\\markerFront\\src\\SharedComponents\\PropertyReferenceCard\\PropertyReferenceCard.tsx":"8","C:\\GitHub\\markerFront\\src\\SharedComponents\\ChangeProductForm\\ChangeProductForm.tsx":"9","C:\\GitHub\\markerFront\\src\\Redux\\constants\\ActionTypes.tsx":"10","C:\\GitHub\\markerFront\\src\\SharedComponents\\LoaderCircle\\LoaderCircle.tsx":"11","C:\\GitHub\\markerFront\\src\\SharedComponents\\AuthorityForm\\AuthorityForm.tsx":"12","C:\\GitHub\\markerFront\\src\\SharedComponents\\LoaderHorizontal\\LoaderHorizontal.tsx":"13","C:\\GitHub\\markerFront\\src\\SharedComponents\\InputNumberFormat\\InputNumberFormat.tsx":"14","C:\\GitHub\\markerFront\\src\\index.tsx":"15","C:\\GitHub\\markerFront\\src\\Redux\\index.tsx":"16","C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\MainLayout.tsx":"17","C:\\GitHub\\markerFront\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx":"18","C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\AdminHeader\\AdminHeader.tsx":"19","C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"20","C:\\GitHub\\markerFront\\src\\Redux\\reducers\\modal.tsx":"21","C:\\GitHub\\markerFront\\src\\SharedComponents\\ButtonComponent\\ButtonComponent.tsx":"22","C:\\GitHub\\markerFront\\src\\reportWebVitals.ts":"23","C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"24","C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"25","C:\\GitHub\\markerFront\\src\\Redux\\reducers\\toast.tsx":"26","C:\\GitHub\\markerFront\\src\\SharedComponents\\ImgSlider\\ImgSlider.tsx":"27","C:\\GitHub\\markerFront\\src\\SharedComponents\\InputMasked\\InputMasked.tsx":"28"},{"size":1392,"mtime":1619077183998,"results":"29","hashOfConfig":"30"},{"size":351,"mtime":1617964863446,"results":"31","hashOfConfig":"30"},{"size":361,"mtime":1617964863443,"results":"32","hashOfConfig":"30"},{"size":3429,"mtime":1619510878466,"results":"33","hashOfConfig":"30"},{"size":989,"mtime":1619509642159,"results":"34","hashOfConfig":"30"},{"size":1275,"mtime":1619510431579,"results":"35","hashOfConfig":"30"},{"size":1910,"mtime":1619411983959,"results":"36","hashOfConfig":"30"},{"size":2977,"mtime":1619411983961,"results":"37","hashOfConfig":"30"},{"size":2574,"mtime":1619528282762,"results":"38","hashOfConfig":"30"},{"size":763,"mtime":1619508797046,"results":"39","hashOfConfig":"30"},{"size":642,"mtime":1619510848646,"results":"40","hashOfConfig":"30"},{"size":6946,"mtime":1619511613935,"results":"41","hashOfConfig":"30"},{"size":520,"mtime":1619511595882,"results":"42","hashOfConfig":"30"},{"size":1328,"mtime":1619527745362,"results":"43","hashOfConfig":"30"},{"size":673,"mtime":1617964863456,"results":"44","hashOfConfig":"30"},{"size":354,"mtime":1617964863447,"results":"45","hashOfConfig":"30"},{"size":959,"mtime":1617964863441,"results":"46","hashOfConfig":"30"},{"size":1787,"mtime":1619071910887,"results":"47","hashOfConfig":"30"},{"size":3999,"mtime":1619173708084,"results":"48","hashOfConfig":"30"},{"size":379,"mtime":1617964863444,"results":"49","hashOfConfig":"30"},{"size":1175,"mtime":1619411983947,"results":"50","hashOfConfig":"30"},{"size":381,"mtime":1619095542833,"results":"51","hashOfConfig":"30"},{"size":440,"mtime":1617964863457,"results":"52","hashOfConfig":"30"},{"size":431,"mtime":1617964863439,"results":"53","hashOfConfig":"30"},{"size":369,"mtime":1619007290554,"results":"54","hashOfConfig":"30"},{"size":891,"mtime":1617964863453,"results":"55","hashOfConfig":"30"},{"size":1680,"mtime":1619411983953,"results":"56","hashOfConfig":"30"},{"size":1480,"mtime":1619515059055,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ir51zn",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\markerFront\\src\\App.tsx",[],"C:\\GitHub\\markerFront\\src\\Redux\\actions\\toast.tsx",[],["118","119"],"C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminProducts\\AdminProducts.tsx",["120"],"C:\\GitHub\\markerFront\\src\\Redux\\actions\\app.tsx",[],"C:\\GitHub\\markerFront\\src\\Redux\\reducers\\app.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\ProductReferenceCard\\ProductReferenceCard.tsx",["121","122","123"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport NavbarMenuItem from '../NavbarMenuItem/NavbarMenuItem'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport './ProductReferenceCard.scss'\r\nimport Product from '../../Redux/interfaces/AdditionalInterfaces/Product'\r\n\r\ninterface ProductReferenceCardProps {\r\n  product: Product\r\n}\r\n\r\nconst ProductReferenceCard = (props: ProductReferenceCardProps) => {\r\n  const [descr, setDescr] = useState(false)\r\n\r\n  const toggleDescr = (): void => {\r\n    const descrData = !descr\r\n    setDescr(descrData)\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"ProductReferenceCard\">\r\n      <Row className=\"ProductReferenceCard__Row m-0\">\r\n        <Col xs={12} className=\"ProductReferenceCard__info p-0\">\r\n          <Container fluid className=\"ProductReferenceCard__Property p-0\">\r\n            <Row className=\"ProductReferenceCard__title m-0 d-flex justify-content-start\">\r\n              <Col xs={3} className=\"d-flex align-items-center\">\r\n                <div className=\"ProductReferenceCard__image\">\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src={\r\n                      props.product.images.length > 0\r\n                        ? `https://picsum.photos/100/100?random=${props.product.id}`\r\n                        : `/img/defaultImage.jpg`\r\n                    }\r\n                    alt={props.product.name}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={9} className=\"ProductReferenceCard__nameValue p-0 d-flex align-items-center\">\r\n                <div>\r\n                  <div className=\"ProductReferenceCard__name\">{props.product.name}</div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProductReferenceCard\r\n",["124","125"],"C:\\GitHub\\markerFront\\src\\SharedComponents\\PropertyReferenceCard\\PropertyReferenceCard.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\ChangeProductForm\\ChangeProductForm.tsx",["126","127","128","129","130"],"C:\\GitHub\\markerFront\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\LoaderCircle\\LoaderCircle.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\AuthorityForm\\AuthorityForm.tsx",["131"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form } from 'react-bootstrap'\r\nimport './AuthorityForm.scss'\r\nimport { useForm } from 'react-hook-form'\r\nimport { OutAuthAdminData } from '../../Redux/interfaces/AdditionalInterfaces/OutAuthAdminData'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../Redux'\r\nimport { setAppMarketUser, setAppLoading } from '../../Redux/actions/app'\r\nimport { MarketUser } from '../../Redux/interfaces/AdditionalInterfaces/MarketUser'\r\nimport { AppState } from '../../Redux/interfaces/interfaces'\r\nimport { Config } from '../../Config/Config'\r\nimport axios from 'axios'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport LoaderCircle from '../LoaderCircle/LoaderCircle'\r\nimport LoaderHorizontal from '../LoaderHorizontal/LoaderHorizontal'\r\n\r\ninterface MatchParams {\r\n  id: string\r\n}\r\n\r\ninterface AuthorityFormProps extends RouteComponentProps<MatchParams> {\r\n  setAppMarketUser: (marketUser: MarketUser) => void\r\n  setAppLoading: (loading: boolean) => void\r\n  app: AppState\r\n}\r\n\r\ninterface FormValues {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst AuthorityForm = (props: AuthorityFormProps) => {\r\n  const [formLoader, setFormLoader] = useState(true)\r\n\r\n  const [formAdditionalErrors, setFormAdditionalErrors] = useState({\r\n    buttonLoading: false,\r\n    formError: '',\r\n    requiredMessageText: 'Обязательное поле для заполнения',\r\n    minLengthMessageText: 'Ввведено недостаточное кол-во символов',\r\n    patternMessageText: 'Неверный формат данных',\r\n  })\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormValues>()\r\n\r\n  useEffect(() => {\r\n    const marketUser = localStorage.getItem('marketUser')\r\n    if (marketUser) {\r\n      const apiToken = JSON.parse(marketUser).apiToken\r\n      checkAuth(apiToken)\r\n    } else {\r\n      setFormLoader(false)\r\n    }\r\n  }, [])\r\n\r\n  const checkAuth = async (apiToken: string): Promise<any> => {\r\n    const api = axios.create({\r\n      baseURL: Config.backConnectData.backendURL,\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n    })\r\n\r\n    await api\r\n      .get('/api/admin/checkAuth')\r\n      .then((res) => {\r\n        const marketUser: MarketUser = {\r\n          apiToken,\r\n          name: res.data.user.name,\r\n          email: res.data.user.email,\r\n          id: res.data.user.id,\r\n          admin: res.data.user.admin,\r\n        }\r\n        props.setAppMarketUser(marketUser)\r\n        localStorage.setItem('marketUser', JSON.stringify(marketUser))\r\n        res.data && props.history.push('/admin')\r\n      })\r\n      .catch((error) => {\r\n        setFormError('Ошибка связи с серверной частью приложения')\r\n        setFormLoader(false)\r\n      })\r\n  }\r\n\r\n  const setFormError = (error: string): void => {\r\n    setFormAdditionalErrors({ ...formAdditionalErrors, formError: error })\r\n  }\r\n\r\n  const handleClick = (data: OutAuthAdminData): void => {\r\n    setFormAdditionalErrors((prevState) => {\r\n      prevState.buttonLoading = true\r\n      return prevState\r\n    })\r\n    setFormError('')\r\n    authRequest(data)\r\n  }\r\n\r\n  const authRequest = async (data: OutAuthAdminData): Promise<any> => {\r\n    const api = axios.create({\r\n      baseURL: Config.backConnectData.backendURL,\r\n      withCredentials: true,\r\n    })\r\n\r\n    await api\r\n      .post('/api/admin/login', data)\r\n      .then((res) => {\r\n        if (res.status === 200 && res.data.apiToken) {\r\n          const marketUser: MarketUser = {\r\n            apiToken: res.data.apiToken,\r\n            name: res.data.user.name,\r\n            email: res.data.user.email,\r\n            id: res.data.user.id,\r\n            admin: res.data.user.admin,\r\n          }\r\n          props.setAppMarketUser(marketUser)\r\n\r\n          localStorage.setItem('marketUser', JSON.stringify(marketUser))\r\n\r\n          props.history.push('/admin')\r\n        } else {\r\n          setFormError('Ошибка авторизации')\r\n          // console.log(res)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setFormError('Ошибка связи с серверной частью приложения')\r\n        console.log(error)\r\n      })\r\n\r\n    setFormAdditionalErrors((prevState) => ({ ...prevState, buttonLoading: false }))\r\n  }\r\n\r\n  // console.log(errors)\r\n\r\n  return (\r\n    <Container fluid className=\"AuthorityForm\">\r\n      {formLoader ? (\r\n        <LoaderCircle />\r\n      ) : (\r\n        <div className=\"AuthorityForm_card\">\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Введите email\"\r\n                {...register('email', {\r\n                  required: { value: true, message: formAdditionalErrors.requiredMessageText },\r\n                  minLength: { value: 5, message: formAdditionalErrors.minLengthMessageText },\r\n                  pattern: { value: /^\\S+@\\S+$/i, message: formAdditionalErrors.patternMessageText },\r\n                })}\r\n              />\r\n\r\n              {errors.email && <Form.Text className=\"text-danger\">{errors.email.message}</Form.Text>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Пароль</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Введите Пароль\"\r\n                {...register('password', {\r\n                  required: { value: true, message: formAdditionalErrors.requiredMessageText },\r\n                  minLength: { value: 6, message: formAdditionalErrors.minLengthMessageText },\r\n                })}\r\n              />\r\n\r\n              {errors.password && <Form.Text className=\"text-danger\">{errors.password.message}</Form.Text>}\r\n            </Form.Group>\r\n\r\n            {formAdditionalErrors.formError !== '' ? (\r\n              <div className=\"AuthorityForm__formError\">\r\n                <Form.Text className=\"text-danger\">{formAdditionalErrors.formError}</Form.Text>\r\n              </div>\r\n            ) : null}\r\n            {formAdditionalErrors.buttonLoading ? (\r\n              <LoaderHorizontal />\r\n            ) : (\r\n              <Button variant=\"primary\" type=\"button\" size=\"lg\" onClick={handleSubmit((data) => handleClick(data))}>\r\n                Войти\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAppMarketUser,\r\n  setAppLoading,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const app = state.app\r\n  const toast = state.toast\r\n  return {\r\n    app,\r\n    toast,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AuthorityForm))\r\n","C:\\GitHub\\markerFront\\src\\SharedComponents\\LoaderHorizontal\\LoaderHorizontal.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\InputNumberFormat\\InputNumberFormat.tsx",[],"C:\\GitHub\\markerFront\\src\\index.tsx",[],"C:\\GitHub\\markerFront\\src\\Redux\\index.tsx",[],"C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\MainLayout.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx",[],"C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\AdminHeader\\AdminHeader.tsx",["132","133"],"C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\markerFront\\src\\Redux\\reducers\\modal.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\ButtonComponent\\ButtonComponent.tsx",[],"C:\\GitHub\\markerFront\\src\\reportWebVitals.ts",[],"C:\\GitHub\\markerFront\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],"C:\\GitHub\\markerFront\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",["134"],"C:\\GitHub\\markerFront\\src\\Redux\\reducers\\toast.tsx",[],"C:\\GitHub\\markerFront\\src\\SharedComponents\\ImgSlider\\ImgSlider.tsx",["135"],"C:\\GitHub\\markerFront\\src\\SharedComponents\\InputMasked\\InputMasked.tsx",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":65,"column":6,"nodeType":"143","endLine":65,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":22},{"ruleId":"145","severity":1,"message":"149","line":4,"column":13,"nodeType":"147","messageId":"148","endLine":4,"endColumn":17},{"ruleId":"145","severity":1,"message":"150","line":15,"column":9,"nodeType":"147","messageId":"148","endLine":15,"endColumn":20},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","replacedBy":"152"},{"ruleId":"145","severity":1,"message":"153","line":16,"column":22,"nodeType":"147","messageId":"148","endLine":16,"endColumn":35},{"ruleId":"145","severity":1,"message":"154","line":17,"column":10,"nodeType":"147","messageId":"148","endLine":17,"endColumn":26},{"ruleId":"145","severity":1,"message":"155","line":19,"column":10,"nodeType":"147","messageId":"148","endLine":19,"endColumn":33},{"ruleId":"145","severity":1,"message":"156","line":21,"column":9,"nodeType":"147","messageId":"148","endLine":21,"endColumn":32},{"ruleId":"145","severity":1,"message":"157","line":29,"column":9,"nodeType":"147","messageId":"148","endLine":29,"endColumn":39},{"ruleId":"141","severity":1,"message":"158","line":57,"column":6,"nodeType":"143","endLine":57,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"161","line":33,"column":23,"nodeType":"147","messageId":"148","endLine":33,"endColumn":34},{"ruleId":"145","severity":1,"message":"162","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"163","line":14,"column":8,"nodeType":"147","messageId":"148","endLine":14,"endColumn":23},{"ruleId":"145","severity":1,"message":"164","line":38,"column":9,"nodeType":"147","messageId":"148","endLine":38,"endColumn":16},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["167"],"@typescript-eslint/no-unused-vars","'NavbarMenuItem' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'toggleDescr' is assigned a value but never used.",["165"],["166"],"'setFormLoader' is assigned a value but never used.","'productNameInput' is assigned a value but never used.","'productDescriptionInput' is assigned a value but never used.","'productNameInputHandler' is assigned a value but never used.","'productDescriptionInputHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAuth'. Either include it or remove the dependency array.",["168"],"'useEffect' is defined but never used.","'setCommands' is assigned a value but never used.","'NavLink' is defined but never used.","'ScrollAnimation' is defined but never used.","'getMask' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [getProducts]",{"range":"173","text":"174"},"Update the dependencies array to be: [checkAuth]",{"range":"175","text":"176"},[2344,2346],"[getProducts]",[1920,1922],"[checkAuth]"]